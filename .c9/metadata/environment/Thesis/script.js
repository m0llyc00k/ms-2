{"filter":false,"title":"script.js","tooltip":"/Thesis/script.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":85,"column":24},"action":"insert","lines":[" /* global d3 */","","        async function drawArcDiagram() {","            // set the dimensions and margins of the graph","            var margin = { top: 20, right: 30, bottom: 20, left: 30 },","                width = 1600 - margin.left - margin.right,","                height = 950 - margin.top - margin.bottom;","","            // append the svg object to the body of the page","            var svg = d3.select(\"#my_dataviz\")","                .append(\"svg\")","                .attr(\"width\", width + margin.left + margin.right)","                .attr(\"height\", height + margin.top + margin.bottom)","                .append(\"g\")","                .attr(\"transform\",","                    \"translate(\" + margin.left + \",\" + margin.top + \")\");","","            // Read data","            const data = await d3.json(\"./data.json\")","","            // List of node names","            var allNodes = data.nodes.map(function(d) { return d.name })","","            // A linear scale to position the nodes on the X axis","            var y = d3.scalePoint()","                .range([0, height])","                .domain(allNodes)","","            // Add the rect for the nodes","            svg","                .selectAll(\"mynodes\")","                .data(data.nodes)","                .enter()","                .append(\"rect\")","                .attr(\"x\", 60)","                .attr(\"y\", function(d) { return (y(d.name)) })","                // .attr(\"r\", 8)","                .attr('width', 20)","                .attr('height', 5)","                .style(\"fill\", \"cornflowerblue\")","","            // And give them a label","            svg","                .selectAll(\"mylabels\")","","                .data(data.nodes)","                .enter()","                .append(\"text\")","                .attr(\"x\", 30)","                .attr(\"y\", function(d) { return (y(d.name)) })","                .text(function(d) { return (d.name) })","                .style(\"text-anchor\", \"middle\")","                .style(\"alignment-baseline\", \"middle\")","                .style(\"font-family\", \"monospace\")","","            // Add links between nodes. Here is the tricky part.","            // In my input data, links are provided between nodes -id-, NOT between node names.","            // So I have to do a link between this id and the name","            var idToNode = {};","            data.nodes.forEach(function(n) {","                idToNode[n.id] = n;","            });","            // Cool, now if I do idToNode[\"2\"].name I've got the name of the node with id 2","","            // Add the links","            svg","                .selectAll('mylinks')","                .data(data.links)","                .enter()","                .append('path')","                .attr('d', function(d) {","                    const start = y(idToNode[d.source].name) // X position of start node on the X axis","                    const end = y(idToNode[d.target].name) // X position of end node","                    return ['M', 70, start, // the arc starts at the coordinate x=start, y=height-30 (where the starting node is)","                            'A', // This means we're gonna build an elliptical arc","                            (end - start) / 2 * 1.5, ',', // Next 2 lines are the coordinates of the inflexion point. Height of this point is proportional with start - end distance","                            (end - start) / 2, 0, 0, ',',","                            start < end ? 1 : 0, 50, ',', end","                        ] // We always want the arc on top. So if end is before start, putting 0 here turn the arc upside down.","                        .join(' ');","                })","                .style(\"fill\", \"none\")","                .attr(\"stroke\", \"darkgray\")","        }","","        drawArcDiagram()"],"id":1}]]},"ace":{"folds":[],"scrolltop":1055,"scrollleft":0,"selection":{"start":{"row":85,"column":24},"end":{"row":85,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1647385615008,"hash":"9b548f6891f0fbe75c5e6538f3f8ea7c4e40f199"}